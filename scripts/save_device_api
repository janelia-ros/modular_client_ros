#! /usr/bin/env python
from __future__ import division,print_function
import argparse
import os
from modular_client import ModularClient


api_dir = './api/'

def main():
    parser = argparse.ArgumentParser(description='Save api from a modular device.')
    parser.add_argument('-p','--port',help='Modular device port.')
    args = parser.parse_args()

    if args.port is not None:
        print("\nOpening modular client on port {0}...\n".format(args.port))
    else:
        print("\nAttempting to find modular device...\n")

    dev = ModularClient(port=args.port)
    print("Modular device {0} found on port {1}\n".format(dev.get_device_id(),dev.get_port()))

    try:
        api_array = os.listdir(api_dir)
        if len(api_array) > 0:
            print("Removing old API files: {0} from {1}...\n".format(api_array,api_dir))
            for api in api_array:
                os.remove(os.path.join(api_dir,api))
    except OSError:
        pass
    print("Saving api...")
    dev.save_api()
    api_array = []
    try:
        api_array = os.listdir(api_dir)
    except OSError:
        pass
    print("Saved: {0} into {1}\n".format(api_array,api_dir))

if __name__ == '__main__':
    main()

